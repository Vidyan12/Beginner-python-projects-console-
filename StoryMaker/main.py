import random

def generate_story():
    """
    Generates a random story based on predefined story elements.

    Returns:
    - str: The generated story.
    """
    when = ['In a magical land', 'During a thunderstorm', 'On a starry night', 'In the distant future', 'At the dawn of time']
    who = ['a daring astronaut', 'a mischievous dragon', 'a curious scientist', 'a time-traveling robot', 'an enchanted wizard']
    name = ['Zara', 'Quasar', 'Luna', 'Nebula', 'Galadriel']
    residence = ['on a floating island', 'in a hidden forest', 'at the edge of the galaxy', 'in a parallel dimension', 'beneath the ocean waves']
    went = ['space observatory', 'enchanted library', 'time-travel portal', 'cosmic carnival', 'interdimensional cafe']
    happened = ['discovered a new galaxy', 'befriended a talking star', 'solved a quantum puzzle', 'unleashed magic powers', 'created a potion of eternal joy']

    story = (
        random.choice(when) + ', ' +
        random.choice(who) + ' named ' +
        random.choice(name) + ', ' +
        'residing ' + random.choice(residence) + ', ' +
        'ventured to the ' + random.choice(went) + ' where they ' +
        random.choice(happened) + '.'
    )

    return story

def main():
    """
    Main function to interact with the user and generate stories.
    """
    while True:
        try:
            num_stories = int(input("Enter the number of stories you want to generate (enter 0 to exit): "))
        except ValueError:
            print("Invalid input. Please enter a valid number.")
            continue

        if num_stories == 0:
            print("Exiting.Hope you liked the stories i generated. Goodbye for now!")
            break
        elif num_stories < 0:
            print("Please enter a non-negative number or 0.")
            continue

        for _ in range(num_stories):
            story = generate_story()
            print("\nHere is a cool story generated by me:")
            print(story)

if __name__ == "__main__":
    main()
